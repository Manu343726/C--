
option(BUILD_DOCUMENTATION "Use Doxygen to create the HTML based API documentation" ON)

# Set vars to documentation
set(DOC_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/doc")
set(DOC_INCLUDE_DIRECTORY "${CMAKE_SOURCE_DIR}/include")

# check if Doxygen is installed
find_package(Doxygen)
if (DOXYGEN_FOUND)
    # set input and output files
    set(DOXYGEN_IN ${CMAKE_SOURCE_DIR}/doc/Doxyfile.in)
    set(DOXYGEN_OUT ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile)

    # request to configure the file
    configure_file(${DOXYGEN_IN} ${DOXYGEN_OUT} @ONLY)
    message("Doxygen build started")

    # note the option ALL which allows to build the docs together with the application
    add_custom_target( doc ALL
        COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYGEN_OUT}
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        COMMENT "Generating API documentation with Doxygen"
        VERBATIM )
else (DOXYGEN_FOUND)
  message("Doxygen need to be installed to generate the doxygen documentation")
endif (DOXYGEN_FOUND)

# if(BUILD_DOCUMENTATION)

#   find_package(Doxygen REQUIRED)

#   if (NOT DOXYGEN_FOUND)
#     message(FATAL_ERROR "Doxygen is needed to build the documentation. Please install it correctly")
#   endif()

#   message(${DOC_OUTPUT_DIRECTORY})
#   message(${DOC_INPUT_DIRECTORY})
#   # message(${CMAKE_BINARY_DIR})

#   add_custom_target (doc ALL
#                      COMMAND ! ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile
#                      COMMENT "Generating API documentation with Doxygen"
#                      VERBATIM
#                      )


# endif()